"use strict";var precacheConfig=[["/index.html","e2996477892ead0371b3af7ea3532564"],["/static/media/Github-icon.26275eec.png","26275eec72943cfdf7244380221c0434"],["/static/media/HomeScreenImage.ea268b90.JPG","ea268b90cb474c66712ef95185d6e5fb"],["/static/media/artInt.9505d874.png","9505d8747ceb34cff4caac1f1463920a"],["/static/media/avatar.39648768.jpg","396487685a2d3d058f2e1717b1d49c75"],["/static/media/coding.47741c2b.png","47741c2b29d8d212b99c07bc1090027a"],["/static/media/css.b848d5d9.png","b848d5d9bb221592064de0f356f61676"],["/static/media/cv.c23834f6.pdf","c23834f61b9032ea11eb63db81b82589"],["/static/media/download.0591b4e9.png","0591b4e97284e1e0351e488f9d58ef46"],["/static/media/facebook.4af5cfc1.png","4af5cfc125cb26fceccade3119f7abda"],["/static/media/html5.5d6cd40c.png","5d6cd40c005b34535bc97755c8e54d24"],["/static/media/instagram.a2a1e46a.png","a2a1e46adfb4bb97d9560cd888001e32"],["/static/media/javascript.d9de75e5.png","d9de75e5bf3a7b0ef2a48321acc06e88"],["/static/media/jquery.28e62ac0.png","28e62ac0c4c6982d8775a3f4f4a19d64"],["/static/media/linkedin.ee2b60db.png","ee2b60db6dab95dbfa7f095047352337"],["/static/media/nodejs.55e83371.png","55e83371dbf50a5f027b1fe31a054ad3"],["/static/media/python.182e9823.png","182e98238de8c18dd7974a6cb32a13c2"],["/static/media/reactnative.f2bd8635.png","f2bd8635a73977ce924b76a80244e546"],["/static/media/smartphoneGreen.bd48077f.png","bd48077f6ea8d0073c46f95ae4e0fb3a"],["/static/media/structure.c4441de8.png","c4441de8b14ff8788a5e3a9fc05043ad"],["/static/media/webdesign.5ea87ea9.png","5ea87ea9c54786678297e4fadc77a1e2"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});